steps:
  - read: project_name
    from: git.remote_name
    fallback:
      prompt: What is the name of the project?
      default:
        from: path.rootdir

  - read: database_type
    prompt: What database type do you want to use?
    choices:
      - MongoDB:
          steps:
            - read: database_var
              eval: "const database = new MongoPersistence(readDatabase, {\n\tsample: new SampleSchema(),\n});"
            - read: database_import
              eval: "import SampleSchema from './schemas/sampleSchema';"
            - read: database_sql
              eval: ""
            - remove: src/dAOs/sampleDAO.ts
            - eval: 'MongoDB'
      - PGSQL:
          steps:
          - read: database_var
            eval: "const database = new DAOPersistence(sql, {\n\tsample: new SampleDAO(),\n});"
          - read: database_import
            eval: "import { PGSQL } from '@flexiblepersistence/pgsql';\nimport SampleDAO from './dAOs/sampleDAO';"
          - read: database_sql
            eval: "const sql = new PGSQL(readDatabase);"
          - remove: src/schemas/sampleSchema.ts
          - eval: 'PGSQL'
      - MSSQL:
          steps:
          - read: database_var
            eval: "const database = new DAOPersistence(sql, {\n\tsample: new SampleDAO(),\n});"
          - read: database_import
            eval: "import { MSSQL } from '@flexiblepersistence/mssql';\nimport SampleDAO from './dAOs/sampleDAO';"
          - read: database_sql
            eval: "const sql = new MSSQL(readDatabase);"
          - remove: src/schemas/sampleSchema.ts
          - eval: 'MSSQL'

  - update: README.md
  - update: package.json
  - update: .env
  - update: .github/workflows/Test.yml
  - update: src/dBHandler.ts